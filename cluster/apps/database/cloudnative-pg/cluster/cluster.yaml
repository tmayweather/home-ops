---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: database
spec:
  instances: 1
  imageName: ghcr.io/cloudnative-pg/postgresql:17.5-20
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: longhorn-database
  superuserSecret:
    name: cloudnative-pg-secret
#  bootstrap:
#    recovery:
#      source: &previousCluster postgres-v3
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 14d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresk3s
    
      serverName: postgres-v4
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
#  externalClusters:
#    - name: *previousCluster
#      barmanObjectStore:
#        wal:
#          compression: bzip2
#          maxParallel: 8
#        destinationPath: s3://cnpg-zd6qkutg/
#        endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
#        s3Credentials:
#          accessKeyId:
#            name: cloudnative-pg-secret
#            key: aws-access-key-id
#          secretAccessKey:
#            name: cloudnative-pg-secret
#            key: aws-secret-access-key
